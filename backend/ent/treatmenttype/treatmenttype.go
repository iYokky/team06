// Code generated by entc, DO NOT EDIT.

package treatmenttype

const (
	// Label holds the string label denoting the treatmenttype type in the database.
	Label = "treatment_type"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"

	// EdgeTreatmentTypeToDiagnosis holds the string denoting the treatmenttypetodiagnosis edge name in mutations.
	EdgeTreatmentTypeToDiagnosis = "TreatmentTypeToDiagnosis"

	// Table holds the table name of the treatmenttype in the database.
	Table = "treatment_types"
	// TreatmentTypeToDiagnosisTable is the table the holds the TreatmentTypeToDiagnosis relation/edge.
	TreatmentTypeToDiagnosisTable = "diagnoses"
	// TreatmentTypeToDiagnosisInverseTable is the table name for the Diagnosis entity.
	// It exists in this package in order to avoid circular dependency with the "diagnosis" package.
	TreatmentTypeToDiagnosisInverseTable = "diagnoses"
	// TreatmentTypeToDiagnosisColumn is the table column denoting the TreatmentTypeToDiagnosis relation/edge.
	TreatmentTypeToDiagnosisColumn = "treatment_type_treatment_type_to_diagnosis"
)

// Columns holds all SQL columns for treatmenttype fields.
var Columns = []string{
	FieldID,
	FieldType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TypeValidator is a validator for the "Type" field. It is called by the builders before save.
	TypeValidator func(string) error
)
