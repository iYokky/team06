// Code generated by entc, DO NOT EDIT.

package room

const (
	// Label holds the string label denoting the room type in the database.
	Label = "room"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRoomName holds the string denoting the roomname field in the database.
	FieldRoomName = "room_name"

	// EdgeRoomToAppointmentResults holds the string denoting the roomtoappointmentresults edge name in mutations.
	EdgeRoomToAppointmentResults = "RoomToAppointmentResults"

	// Table holds the table name of the room in the database.
	Table = "rooms"
	// RoomToAppointmentResultsTable is the table the holds the RoomToAppointmentResults relation/edge.
	RoomToAppointmentResultsTable = "appointment_results"
	// RoomToAppointmentResultsInverseTable is the table name for the AppointmentResults entity.
	// It exists in this package in order to avoid circular dependency with the "appointmentresults" package.
	RoomToAppointmentResultsInverseTable = "appointment_results"
	// RoomToAppointmentResultsColumn is the table column denoting the RoomToAppointmentResults relation/edge.
	RoomToAppointmentResultsColumn = "room_room_to_appointment_results"
)

// Columns holds all SQL columns for room fields.
var Columns = []string{
	FieldID,
	FieldRoomName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// RoomNameValidator is a validator for the "roomName" field. It is called by the builders before save.
	RoomNameValidator func(string) error
)
