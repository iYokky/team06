// Code generated by entc, DO NOT EDIT.

package bloodtype

const (
	// Label holds the string label denoting the bloodtype type in the database.
	Label = "blood_type"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBlood holds the string denoting the blood field in the database.
	FieldBlood = "blood"

	// EdgeBloodTypeToPatient holds the string denoting the bloodtypetopatient edge name in mutations.
	EdgeBloodTypeToPatient = "BloodTypeToPatient"

	// Table holds the table name of the bloodtype in the database.
	Table = "blood_types"
	// BloodTypeToPatientTable is the table the holds the BloodTypeToPatient relation/edge.
	BloodTypeToPatientTable = "patients"
	// BloodTypeToPatientInverseTable is the table name for the Patient entity.
	// It exists in this package in order to avoid circular dependency with the "patient" package.
	BloodTypeToPatientInverseTable = "patients"
	// BloodTypeToPatientColumn is the table column denoting the BloodTypeToPatient relation/edge.
	BloodTypeToPatientColumn = "blood_type_blood_type_to_patient"
)

// Columns holds all SQL columns for bloodtype fields.
var Columns = []string{
	FieldID,
	FieldBlood,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// BloodValidator is a validator for the "blood" field. It is called by the builders before save.
	BloodValidator func(string) error
)
