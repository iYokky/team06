// Code generated by entc, DO NOT EDIT.

package gender

const (
	// Label holds the string label denoting the gender type in the database.
	Label = "gender"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGenderValue holds the string denoting the gendervalue field in the database.
	FieldGenderValue = "gender_value"

	// EdgePatientDetails holds the string denoting the patient_details edge name in mutations.
	EdgePatientDetails = "patient_details"

	// Table holds the table name of the gender in the database.
	Table = "genders"
	// PatientDetailsTable is the table the holds the patient_details relation/edge.
	PatientDetailsTable = "patient_details"
	// PatientDetailsInverseTable is the table name for the PatientDetail entity.
	// It exists in this package in order to avoid circular dependency with the "patientdetail" package.
	PatientDetailsInverseTable = "patient_details"
	// PatientDetailsColumn is the table column denoting the patient_details relation/edge.
	PatientDetailsColumn = "gender_patient_details"
)

// Columns holds all SQL columns for gender fields.
var Columns = []string{
	FieldID,
	FieldGenderValue,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// GenderValueValidator is a validator for the "genderValue" field. It is called by the builders before save.
	GenderValueValidator func(string) error
)
