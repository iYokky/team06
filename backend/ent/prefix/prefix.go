// Code generated by entc, DO NOT EDIT.

package prefix

const (
	// Label holds the string label denoting the prefix type in the database.
	Label = "prefix"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPrefix holds the string denoting the prefix field in the database.
	FieldPrefix = "prefix"

	// EdgePrefixToPatient holds the string denoting the prefixtopatient edge name in mutations.
	EdgePrefixToPatient = "PrefixToPatient"

	// Table holds the table name of the prefix in the database.
	Table = "prefixes"
	// PrefixToPatientTable is the table the holds the PrefixToPatient relation/edge.
	PrefixToPatientTable = "patients"
	// PrefixToPatientInverseTable is the table name for the Patient entity.
	// It exists in this package in order to avoid circular dependency with the "patient" package.
	PrefixToPatientInverseTable = "patients"
	// PrefixToPatientColumn is the table column denoting the PrefixToPatient relation/edge.
	PrefixToPatientColumn = "prefix_prefix_to_patient"
)

// Columns holds all SQL columns for prefix fields.
var Columns = []string{
	FieldID,
	FieldPrefix,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PrefixValidator is a validator for the "prefix" field. It is called by the builders before save.
	PrefixValidator func(string) error
)
