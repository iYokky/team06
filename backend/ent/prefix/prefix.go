// Code generated by entc, DO NOT EDIT.

package prefix

const (
	// Label holds the string label denoting the prefix type in the database.
	Label = "prefix"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPrefixValue holds the string denoting the prefixvalue field in the database.
	FieldPrefixValue = "prefix_value"

	// EdgePatient holds the string denoting the patient edge name in mutations.
	EdgePatient = "patient"

	// Table holds the table name of the prefix in the database.
	Table = "prefixes"
	// PatientTable is the table the holds the patient relation/edge.
	PatientTable = "patients"
	// PatientInverseTable is the table name for the Patient entity.
	// It exists in this package in order to avoid circular dependency with the "patient" package.
	PatientInverseTable = "patients"
	// PatientColumn is the table column denoting the patient relation/edge.
	PatientColumn = "prefix_patient"
)

// Columns holds all SQL columns for prefix fields.
var Columns = []string{
	FieldID,
	FieldPrefixValue,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PrefixValueValidator is a validator for the "prefixValue" field. It is called by the builders before save.
	PrefixValueValidator func(string) error
)
